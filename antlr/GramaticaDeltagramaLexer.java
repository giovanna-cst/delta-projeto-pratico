// Generated from java-escape by ANTLR 4.11.1

    package antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class GramaticaDeltagramaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, ENT=2, SAI=3, OP_COMP=4, OP_LOG=5, TIPO=6, SE=7, SENAO=8, NUM_INT=9, 
		NUM_REAL=10, ENQ=11, OP_ARIT=12, OP_ATRI=13, PONT=14, ABRE_COMEN=15, FECHA_COMEN=16, 
		INI=17, FIM=18, AP=19, FP=20, VAR=21, WS=22;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "NUM", "LET", "ENT", "SAI", "OP_COMP", "OP_LOG", "TIPO", "SE", 
			"SENAO", "NUM_INT", "NUM_REAL", "ENQ", "OP_ARIT", "OP_ATRI", "PONT", 
			"ABRE_COMEN", "FECHA_COMEN", "INI", "FIM", "AP", "FP", "VAR", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "':'", "'entrada:'", "'saida:'", null, null, null, "'se'", "'senao'", 
			null, null, "'enquanto:'", null, null, null, "'/\"'", "'\"/'", "'<'", 
			"'>'", "'('", "')'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, "ENT", "SAI", "OP_COMP", "OP_LOG", "TIPO", "SE", "SENAO", 
			"NUM_INT", "NUM_REAL", "ENQ", "OP_ARIT", "OP_ATRI", "PONT", "ABRE_COMEN", 
			"FECHA_COMEN", "INI", "FIM", "AP", "FP", "VAR", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public GramaticaDeltagramaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "GramaticaDeltagrama.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0016\u00bc\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0003\u0005W\b\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006_\b\u0006\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0003\u0007t\b\u0007\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t"+
		"\u0001\t\u0001\t\u0001\t\u0001\n\u0004\n\u0080\b\n\u000b\n\f\n\u0081\u0001"+
		"\u000b\u0004\u000b\u0085\b\u000b\u000b\u000b\f\u000b\u0086\u0001\u000b"+
		"\u0001\u000b\u0004\u000b\u008b\b\u000b\u000b\u000b\f\u000b\u008c\u0001"+
		"\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001\f\u0001"+
		"\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001"+
		"\u0010\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001"+
		"\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0005\u0016\u00b0"+
		"\b\u0016\n\u0016\f\u0016\u00b3\t\u0016\u0001\u0017\u0005\u0017\u00b6\b"+
		"\u0017\n\u0017\f\u0017\u00b9\t\u0017\u0001\u0017\u0001\u0017\u0000\u0000"+
		"\u0018\u0001\u0001\u0003\u0000\u0005\u0000\u0007\u0002\t\u0003\u000b\u0004"+
		"\r\u0005\u000f\u0006\u0011\u0007\u0013\b\u0015\t\u0017\n\u0019\u000b\u001b"+
		"\f\u001d\r\u001f\u000e!\u000f#\u0010%\u0011\'\u0012)\u0013+\u0014-\u0015"+
		"/\u0016\u0001\u0000\u0006\u0001\u000009\u0002\u0000AZaz\u0003\u0000*+"+
		"--//\u0002\u0000::==\u0005\u0000!!,,..;;??\u0003\u0000\t\n\r\r  \u00c6"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00011\u0001\u0000\u0000\u0000\u00033\u0001\u0000"+
		"\u0000\u0000\u00055\u0001\u0000\u0000\u0000\u00077\u0001\u0000\u0000\u0000"+
		"\t@\u0001\u0000\u0000\u0000\u000bV\u0001\u0000\u0000\u0000\r^\u0001\u0000"+
		"\u0000\u0000\u000fs\u0001\u0000\u0000\u0000\u0011u\u0001\u0000\u0000\u0000"+
		"\u0013x\u0001\u0000\u0000\u0000\u0015\u007f\u0001\u0000\u0000\u0000\u0017"+
		"\u0084\u0001\u0000\u0000\u0000\u0019\u008e\u0001\u0000\u0000\u0000\u001b"+
		"\u0098\u0001\u0000\u0000\u0000\u001d\u009a\u0001\u0000\u0000\u0000\u001f"+
		"\u009c\u0001\u0000\u0000\u0000!\u009e\u0001\u0000\u0000\u0000#\u00a1\u0001"+
		"\u0000\u0000\u0000%\u00a4\u0001\u0000\u0000\u0000\'\u00a6\u0001\u0000"+
		"\u0000\u0000)\u00a8\u0001\u0000\u0000\u0000+\u00aa\u0001\u0000\u0000\u0000"+
		"-\u00ac\u0001\u0000\u0000\u0000/\u00b7\u0001\u0000\u0000\u000012\u0005"+
		":\u0000\u00002\u0002\u0001\u0000\u0000\u000034\u0007\u0000\u0000\u0000"+
		"4\u0004\u0001\u0000\u0000\u000056\u0007\u0001\u0000\u00006\u0006\u0001"+
		"\u0000\u0000\u000078\u0005e\u0000\u000089\u0005n\u0000\u00009:\u0005t"+
		"\u0000\u0000:;\u0005r\u0000\u0000;<\u0005a\u0000\u0000<=\u0005d\u0000"+
		"\u0000=>\u0005a\u0000\u0000>?\u0005:\u0000\u0000?\b\u0001\u0000\u0000"+
		"\u0000@A\u0005s\u0000\u0000AB\u0005a\u0000\u0000BC\u0005i\u0000\u0000"+
		"CD\u0005d\u0000\u0000DE\u0005a\u0000\u0000EF\u0005:\u0000\u0000F\n\u0001"+
		"\u0000\u0000\u0000GH\u0005M\u0000\u0000HI\u0005A\u0000\u0000IJ\u0005I"+
		"\u0000\u0000JK\u0005O\u0000\u0000KW\u0005R\u0000\u0000LM\u0005M\u0000"+
		"\u0000MN\u0005E\u0000\u0000NO\u0005N\u0000\u0000OP\u0005O\u0000\u0000"+
		"PW\u0005R\u0000\u0000QR\u0005I\u0000\u0000RS\u0005G\u0000\u0000ST\u0005"+
		"U\u0000\u0000TU\u0005A\u0000\u0000UW\u0005L\u0000\u0000VG\u0001\u0000"+
		"\u0000\u0000VL\u0001\u0000\u0000\u0000VQ\u0001\u0000\u0000\u0000W\f\u0001"+
		"\u0000\u0000\u0000X_\u0005E\u0000\u0000YZ\u0005O\u0000\u0000Z_\u0005U"+
		"\u0000\u0000[\\\u0005N\u0000\u0000\\]\u0005A\u0000\u0000]_\u0005O\u0000"+
		"\u0000^X\u0001\u0000\u0000\u0000^Y\u0001\u0000\u0000\u0000^[\u0001\u0000"+
		"\u0000\u0000_\u000e\u0001\u0000\u0000\u0000`a\u0005i\u0000\u0000ab\u0005"+
		"n\u0000\u0000bt\u0005t\u0000\u0000cd\u0005d\u0000\u0000de\u0005o\u0000"+
		"\u0000ef\u0005u\u0000\u0000fg\u0005b\u0000\u0000gh\u0005l\u0000\u0000"+
		"ht\u0005e\u0000\u0000ij\u0005b\u0000\u0000jk\u0005o\u0000\u0000kl\u0005"+
		"o\u0000\u0000lt\u0005l\u0000\u0000mn\u0005s\u0000\u0000no\u0005t\u0000"+
		"\u0000op\u0005r\u0000\u0000pq\u0005i\u0000\u0000qr\u0005n\u0000\u0000"+
		"rt\u0005g\u0000\u0000s`\u0001\u0000\u0000\u0000sc\u0001\u0000\u0000\u0000"+
		"si\u0001\u0000\u0000\u0000sm\u0001\u0000\u0000\u0000t\u0010\u0001\u0000"+
		"\u0000\u0000uv\u0005s\u0000\u0000vw\u0005e\u0000\u0000w\u0012\u0001\u0000"+
		"\u0000\u0000xy\u0005s\u0000\u0000yz\u0005e\u0000\u0000z{\u0005n\u0000"+
		"\u0000{|\u0005a\u0000\u0000|}\u0005o\u0000\u0000}\u0014\u0001\u0000\u0000"+
		"\u0000~\u0080\u0003\u0003\u0001\u0000\u007f~\u0001\u0000\u0000\u0000\u0080"+
		"\u0081\u0001\u0000\u0000\u0000\u0081\u007f\u0001\u0000\u0000\u0000\u0081"+
		"\u0082\u0001\u0000\u0000\u0000\u0082\u0016\u0001\u0000\u0000\u0000\u0083"+
		"\u0085\u0003\u0003\u0001\u0000\u0084\u0083\u0001\u0000\u0000\u0000\u0085"+
		"\u0086\u0001\u0000\u0000\u0000\u0086\u0084\u0001\u0000\u0000\u0000\u0086"+
		"\u0087\u0001\u0000\u0000\u0000\u0087\u0088\u0001\u0000\u0000\u0000\u0088"+
		"\u008a\u0005.\u0000\u0000\u0089\u008b\u0003\u0003\u0001\u0000\u008a\u0089"+
		"\u0001\u0000\u0000\u0000\u008b\u008c\u0001\u0000\u0000\u0000\u008c\u008a"+
		"\u0001\u0000\u0000\u0000\u008c\u008d\u0001\u0000\u0000\u0000\u008d\u0018"+
		"\u0001\u0000\u0000\u0000\u008e\u008f\u0005e\u0000\u0000\u008f\u0090\u0005"+
		"n\u0000\u0000\u0090\u0091\u0005q\u0000\u0000\u0091\u0092\u0005u\u0000"+
		"\u0000\u0092\u0093\u0005a\u0000\u0000\u0093\u0094\u0005n\u0000\u0000\u0094"+
		"\u0095\u0005t\u0000\u0000\u0095\u0096\u0005o\u0000\u0000\u0096\u0097\u0005"+
		":\u0000\u0000\u0097\u001a\u0001\u0000\u0000\u0000\u0098\u0099\u0007\u0002"+
		"\u0000\u0000\u0099\u001c\u0001\u0000\u0000\u0000\u009a\u009b\u0007\u0003"+
		"\u0000\u0000\u009b\u001e\u0001\u0000\u0000\u0000\u009c\u009d\u0007\u0004"+
		"\u0000\u0000\u009d \u0001\u0000\u0000\u0000\u009e\u009f\u0005/\u0000\u0000"+
		"\u009f\u00a0\u0005\"\u0000\u0000\u00a0\"\u0001\u0000\u0000\u0000\u00a1"+
		"\u00a2\u0005\"\u0000\u0000\u00a2\u00a3\u0005/\u0000\u0000\u00a3$\u0001"+
		"\u0000\u0000\u0000\u00a4\u00a5\u0005<\u0000\u0000\u00a5&\u0001\u0000\u0000"+
		"\u0000\u00a6\u00a7\u0005>\u0000\u0000\u00a7(\u0001\u0000\u0000\u0000\u00a8"+
		"\u00a9\u0005(\u0000\u0000\u00a9*\u0001\u0000\u0000\u0000\u00aa\u00ab\u0005"+
		")\u0000\u0000\u00ab,\u0001\u0000\u0000\u0000\u00ac\u00b1\u0003\u0005\u0002"+
		"\u0000\u00ad\u00b0\u0003\u0003\u0001\u0000\u00ae\u00b0\u0003\u0005\u0002"+
		"\u0000\u00af\u00ad\u0001\u0000\u0000\u0000\u00af\u00ae\u0001\u0000\u0000"+
		"\u0000\u00b0\u00b3\u0001\u0000\u0000\u0000\u00b1\u00af\u0001\u0000\u0000"+
		"\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2.\u0001\u0000\u0000\u0000"+
		"\u00b3\u00b1\u0001\u0000\u0000\u0000\u00b4\u00b6\u0007\u0005\u0000\u0000"+
		"\u00b5\u00b4\u0001\u0000\u0000\u0000\u00b6\u00b9\u0001\u0000\u0000\u0000"+
		"\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b7\u00b8\u0001\u0000\u0000\u0000"+
		"\u00b8\u00ba\u0001\u0000\u0000\u0000\u00b9\u00b7\u0001\u0000\u0000\u0000"+
		"\u00ba\u00bb\u0006\u0017\u0000\u0000\u00bb0\u0001\u0000\u0000\u0000\n"+
		"\u0000V^s\u0081\u0086\u008c\u00af\u00b1\u00b7\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}